module fmod.common;

extern (C):

alias int FMOD_BOOL;
/*
alias FMOD_SYSTEM FMOD_SYSTEM;
alias FMOD_SOUND FMOD_SOUND;
alias FMOD_CHANNELCONTROL FMOD_CHANNELCONTROL;
alias FMOD_CHANNEL FMOD_CHANNEL;
alias FMOD_CHANNELGROUP FMOD_CHANNELGROUP;
alias FMOD_SOUNDGROUP FMOD_SOUNDGROUP;
alias FMOD_REVERB3D FMOD_REVERB3D;
alias FMOD_DSP FMOD_DSP;
alias FMOD_DSPCONNECTION FMOD_DSPCONNECTION;
alias FMOD_POLYGON FMOD_POLYGON;
alias FMOD_GEOMETRY FMOD_GEOMETRY;
alias FMOD_SYNCPOINT FMOD_SYNCPOINT;
alias FMOD_ASYNCREADINFO FMOD_ASYNCREADINFO;
*/
alias uint FMOD_MODE;
alias uint FMOD_TIMEUNIT;
alias uint FMOD_INITFLAGS;
alias uint FMOD_DEBUG_FLAGS;
alias uint FMOD_MEMORY_TYPE;
alias uint FMOD_SYSTEM_CALLBACK_TYPE;
alias uint FMOD_CHANNELMASK;
alias uint FMOD_DRIVER_STATE;
alias uint FMOD_PORT_TYPE;
alias ulong FMOD_PORT_INDEX;
alias _Anonymous_0 FMOD_RESULT;
alias _Anonymous_1 FMOD_CHANNELCONTROL_TYPE;
alias _Anonymous_2 FMOD_VECTOR;
// alias FMOD_3D_ATTRIBUTES FMOD_3D_ATTRIBUTES;
alias _Anonymous_3 FMOD_GUID;
alias void function (FMOD_ASYNCREADINFO*, _Anonymous_0) FMOD_FILE_ASYNCDONE;
alias _Anonymous_4 FMOD_OUTPUTTYPE;
alias _Anonymous_5 FMOD_DEBUG_MODE;
alias _Anonymous_6 FMOD_SPEAKERMODE;
alias _Anonymous_7 FMOD_SPEAKER;
// alias FMOD_CHANNELORDER FMOD_CHANNELORDER;
alias _Anonymous_8 FMOD_PLUGINTYPE;
alias _Anonymous_9 FMOD_SOUND_TYPE;
alias _Anonymous_10 FMOD_SOUND_FORMAT;
alias _Anonymous_11 FMOD_OPENSTATE;
alias _Anonymous_12 FMOD_SOUNDGROUP_BEHAVIOR;
alias _Anonymous_13 FMOD_CHANNELCONTROL_CALLBACK_TYPE;
alias _Anonymous_14 FMOD_CHANNELCONTROL_DSP_INDEX;
alias _Anonymous_15 FMOD_ERRORCALLBACK_INSTANCETYPE;
alias _Anonymous_16 FMOD_ERRORCALLBACK_INFO;
alias _Anonymous_0 function (uint, const(char)*, int, const(char)*, const(char)*) FMOD_DEBUG_CALLBACK;
alias _Anonymous_0 function (FMOD_SYSTEM*, uint, void*, void*, void*) FMOD_SYSTEM_CALLBACK;
alias _Anonymous_0 function (FMOD_CHANNELCONTROL*, _Anonymous_1, _Anonymous_13, void*, void*) FMOD_CHANNELCONTROL_CALLBACK;
alias _Anonymous_0 function (FMOD_SOUND*, _Anonymous_0) FMOD_SOUND_NONBLOCK_CALLBACK;
alias _Anonymous_0 function (FMOD_SOUND*, void*, uint) FMOD_SOUND_PCMREAD_CALLBACK;
alias _Anonymous_0 function (FMOD_SOUND*, int, uint, uint) FMOD_SOUND_PCMSETPOS_CALLBACK;
alias _Anonymous_0 function (const(char)*, uint*, void**, void*) FMOD_FILE_OPEN_CALLBACK;
alias _Anonymous_0 function (void*, void*) FMOD_FILE_CLOSE_CALLBACK;
alias _Anonymous_0 function (void*, void*, uint, uint*, void*) FMOD_FILE_READ_CALLBACK;
alias _Anonymous_0 function (void*, uint, void*) FMOD_FILE_SEEK_CALLBACK;
alias _Anonymous_0 function (FMOD_ASYNCREADINFO*, void*) FMOD_FILE_ASYNCREAD_CALLBACK;
alias _Anonymous_0 function (FMOD_ASYNCREADINFO*, void*) FMOD_FILE_ASYNCCANCEL_CALLBACK;
alias void* function (uint, uint, const(char)*) FMOD_MEMORY_ALLOC_CALLBACK;
alias void* function (void*, uint, uint, const(char)*) FMOD_MEMORY_REALLOC_CALLBACK;
alias void function (void*, uint, const(char)*) FMOD_MEMORY_FREE_CALLBACK;
alias float function (FMOD_CHANNELCONTROL*, float) FMOD_3D_ROLLOFF_CALLBACK;
alias _Anonymous_17 FMOD_DSP_RESAMPLER;
alias _Anonymous_18 FMOD_DSPCONNECTION_TYPE;
alias _Anonymous_19 FMOD_TAGTYPE;
alias _Anonymous_20 FMOD_TAGDATATYPE;
/*
alias FMOD_TAG FMOD_TAG;
alias FMOD_CREATESOUNDEXINFO FMOD_CREATESOUNDEXINFO;
alias FMOD_REVERB_PROPERTIES FMOD_REVERB_PROPERTIES;
alias FMOD_ADVANCEDSETTINGS FMOD_ADVANCEDSETTINGS;
*/
enum _Anonymous_0
{
	FMOD_OK = 0,
	FMOD_ERR_BADCOMMAND = 1,
	FMOD_ERR_CHANNEL_ALLOC = 2,
	FMOD_ERR_CHANNEL_STOLEN = 3,
	FMOD_ERR_DMA = 4,
	FMOD_ERR_DSP_CONNECTION = 5,
	FMOD_ERR_DSP_DONTPROCESS = 6,
	FMOD_ERR_DSP_FORMAT = 7,
	FMOD_ERR_DSP_INUSE = 8,
	FMOD_ERR_DSP_NOTFOUND = 9,
	FMOD_ERR_DSP_RESERVED = 10,
	FMOD_ERR_DSP_SILENCE = 11,
	FMOD_ERR_DSP_TYPE = 12,
	FMOD_ERR_FILE_BAD = 13,
	FMOD_ERR_FILE_COULDNOTSEEK = 14,
	FMOD_ERR_FILE_DISKEJECTED = 15,
	FMOD_ERR_FILE_EOF = 16,
	FMOD_ERR_FILE_ENDOFDATA = 17,
	FMOD_ERR_FILE_NOTFOUND = 18,
	FMOD_ERR_FORMAT = 19,
	FMOD_ERR_HEADER_MISMATCH = 20,
	FMOD_ERR_HTTP = 21,
	FMOD_ERR_HTTP_ACCESS = 22,
	FMOD_ERR_HTTP_PROXY_AUTH = 23,
	FMOD_ERR_HTTP_SERVER_ERROR = 24,
	FMOD_ERR_HTTP_TIMEOUT = 25,
	FMOD_ERR_INITIALIZATION = 26,
	FMOD_ERR_INITIALIZED = 27,
	FMOD_ERR_INTERNAL = 28,
	FMOD_ERR_INVALID_FLOAT = 29,
	FMOD_ERR_INVALID_HANDLE = 30,
	FMOD_ERR_INVALID_PARAM = 31,
	FMOD_ERR_INVALID_POSITION = 32,
	FMOD_ERR_INVALID_SPEAKER = 33,
	FMOD_ERR_INVALID_SYNCPOINT = 34,
	FMOD_ERR_INVALID_THREAD = 35,
	FMOD_ERR_INVALID_VECTOR = 36,
	FMOD_ERR_MAXAUDIBLE = 37,
	FMOD_ERR_MEMORY = 38,
	FMOD_ERR_MEMORY_CANTPOINT = 39,
	FMOD_ERR_NEEDS3D = 40,
	FMOD_ERR_NEEDSHARDWARE = 41,
	FMOD_ERR_NET_CONNECT = 42,
	FMOD_ERR_NET_SOCKET_ERROR = 43,
	FMOD_ERR_NET_URL = 44,
	FMOD_ERR_NET_WOULD_BLOCK = 45,
	FMOD_ERR_NOTREADY = 46,
	FMOD_ERR_OUTPUT_ALLOCATED = 47,
	FMOD_ERR_OUTPUT_CREATEBUFFER = 48,
	FMOD_ERR_OUTPUT_DRIVERCALL = 49,
	FMOD_ERR_OUTPUT_FORMAT = 50,
	FMOD_ERR_OUTPUT_INIT = 51,
	FMOD_ERR_OUTPUT_NODRIVERS = 52,
	FMOD_ERR_PLUGIN = 53,
	FMOD_ERR_PLUGIN_MISSING = 54,
	FMOD_ERR_PLUGIN_RESOURCE = 55,
	FMOD_ERR_PLUGIN_VERSION = 56,
	FMOD_ERR_RECORD = 57,
	FMOD_ERR_REVERB_CHANNELGROUP = 58,
	FMOD_ERR_REVERB_INSTANCE = 59,
	FMOD_ERR_SUBSOUNDS = 60,
	FMOD_ERR_SUBSOUND_ALLOCATED = 61,
	FMOD_ERR_SUBSOUND_CANTMOVE = 62,
	FMOD_ERR_TAGNOTFOUND = 63,
	FMOD_ERR_TOOMANYCHANNELS = 64,
	FMOD_ERR_TRUNCATED = 65,
	FMOD_ERR_UNIMPLEMENTED = 66,
	FMOD_ERR_UNINITIALIZED = 67,
	FMOD_ERR_UNSUPPORTED = 68,
	FMOD_ERR_VERSION = 69,
	FMOD_ERR_EVENT_ALREADY_LOADED = 70,
	FMOD_ERR_EVENT_LIVEUPDATE_BUSY = 71,
	FMOD_ERR_EVENT_LIVEUPDATE_MISMATCH = 72,
	FMOD_ERR_EVENT_LIVEUPDATE_TIMEOUT = 73,
	FMOD_ERR_EVENT_NOTFOUND = 74,
	FMOD_ERR_STUDIO_UNINITIALIZED = 75,
	FMOD_ERR_STUDIO_NOT_LOADED = 76,
	FMOD_ERR_INVALID_STRING = 77,
	FMOD_ERR_ALREADY_LOCKED = 78,
	FMOD_ERR_NOT_LOCKED = 79,
	FMOD_RESULT_FORCEINT = 65536
}

enum _Anonymous_1
{
	FMOD_CHANNELCONTROL_CHANNEL = 0,
	FMOD_CHANNELCONTROL_CHANNELGROUP = 1,
	FMOD_CHANNELCONTROL_FORCEINT = 65536
}

enum _Anonymous_4
{
	FMOD_OUTPUTTYPE_AUTODETECT = 0,
	FMOD_OUTPUTTYPE_UNKNOWN = 1,
	FMOD_OUTPUTTYPE_NOSOUND = 2,
	FMOD_OUTPUTTYPE_WAVWRITER = 3,
	FMOD_OUTPUTTYPE_NOSOUND_NRT = 4,
	FMOD_OUTPUTTYPE_WAVWRITER_NRT = 5,
	FMOD_OUTPUTTYPE_DSOUND = 6,
	FMOD_OUTPUTTYPE_WINMM = 7,
	FMOD_OUTPUTTYPE_WASAPI = 8,
	FMOD_OUTPUTTYPE_ASIO = 9,
	FMOD_OUTPUTTYPE_PULSEAUDIO = 10,
	FMOD_OUTPUTTYPE_ALSA = 11,
	FMOD_OUTPUTTYPE_COREAUDIO = 12,
	FMOD_OUTPUTTYPE_XBOX360 = 13,
	FMOD_OUTPUTTYPE_PS3 = 14,
	FMOD_OUTPUTTYPE_AUDIOTRACK = 15,
	FMOD_OUTPUTTYPE_OPENSL = 16,
	FMOD_OUTPUTTYPE_WIIU = 17,
	FMOD_OUTPUTTYPE_AUDIOOUT = 18,
	FMOD_OUTPUTTYPE_MAX = 19,
	FMOD_OUTPUTTYPE_FORCEINT = 65536
}

enum _Anonymous_5
{
	FMOD_DEBUG_MODE_TTY = 0,
	FMOD_DEBUG_MODE_FILE = 1,
	FMOD_DEBUG_MODE_CALLBACK = 2,
	FMOD_DEBUG_MODE_FORCEINT = 65536
}

enum _Anonymous_6
{
	FMOD_SPEAKERMODE_DEFAULT = 0,
	FMOD_SPEAKERMODE_RAW = 1,
	FMOD_SPEAKERMODE_MONO = 2,
	FMOD_SPEAKERMODE_STEREO = 3,
	FMOD_SPEAKERMODE_QUAD = 4,
	FMOD_SPEAKERMODE_SURROUND = 5,
	FMOD_SPEAKERMODE_5POINT1 = 6,
	FMOD_SPEAKERMODE_7POINT1 = 7,
	FMOD_SPEAKERMODE_MAX = 8,
	FMOD_SPEAKERMODE_FORCEINT = 65536
}

enum _Anonymous_7
{
	FMOD_SPEAKER_FRONT_LEFT = 0,
	FMOD_SPEAKER_FRONT_RIGHT = 1,
	FMOD_SPEAKER_FRONT_CENTER = 2,
	FMOD_SPEAKER_LOW_FREQUENCY = 3,
	FMOD_SPEAKER_SURROUND_LEFT = 4,
	FMOD_SPEAKER_SURROUND_RIGHT = 5,
	FMOD_SPEAKER_BACK_LEFT = 6,
	FMOD_SPEAKER_BACK_RIGHT = 7,
	FMOD_SPEAKER_MAX = 8,
	FMOD_SPEAKER_FORCEINT = 65536
}

enum FMOD_CHANNELORDER
{
	FMOD_CHANNELORDER_DEFAULT = 0,
	FMOD_CHANNELORDER_WAVEFORMAT = 1,
	FMOD_CHANNELORDER_PROTOOLS = 2,
	FMOD_CHANNELORDER_ALLMONO = 3,
	FMOD_CHANNELORDER_ALLSTEREO = 4,
	FMOD_CHANNELORDER_ALSA = 5,
	FMOD_CHANNELORDER_MAX = 6,
	FMOD_CHANNELORDER_FORCEINT = 65536
}

enum _Anonymous_8
{
	FMOD_PLUGINTYPE_OUTPUT = 0,
	FMOD_PLUGINTYPE_CODEC = 1,
	FMOD_PLUGINTYPE_DSP = 2,
	FMOD_PLUGINTYPE_MAX = 3,
	FMOD_PLUGINTYPE_FORCEINT = 65536
}

enum _Anonymous_9
{
	FMOD_SOUND_TYPE_UNKNOWN = 0,
	FMOD_SOUND_TYPE_AIFF = 1,
	FMOD_SOUND_TYPE_ASF = 2,
	FMOD_SOUND_TYPE_AT3 = 3,
	FMOD_SOUND_TYPE_DLS = 4,
	FMOD_SOUND_TYPE_FLAC = 5,
	FMOD_SOUND_TYPE_FSB = 6,
	FMOD_SOUND_TYPE_GCADPCM = 7,
	FMOD_SOUND_TYPE_IT = 8,
	FMOD_SOUND_TYPE_MIDI = 9,
	FMOD_SOUND_TYPE_MOD = 10,
	FMOD_SOUND_TYPE_MPEG = 11,
	FMOD_SOUND_TYPE_OGGVORBIS = 12,
	FMOD_SOUND_TYPE_PLAYLIST = 13,
	FMOD_SOUND_TYPE_RAW = 14,
	FMOD_SOUND_TYPE_S3M = 15,
	FMOD_SOUND_TYPE_USER = 16,
	FMOD_SOUND_TYPE_WAV = 17,
	FMOD_SOUND_TYPE_XM = 18,
	FMOD_SOUND_TYPE_XMA = 19,
	FMOD_SOUND_TYPE_VAG = 20,
	FMOD_SOUND_TYPE_AUDIOQUEUE = 21,
	FMOD_SOUND_TYPE_XWMA = 22,
	FMOD_SOUND_TYPE_BCWAV = 23,
	FMOD_SOUND_TYPE_AT9 = 24,
	FMOD_SOUND_TYPE_VORBIS = 25,
	FMOD_SOUND_TYPE_MEDIA_FOUNDATION = 26,
	FMOD_SOUND_TYPE_MEDIACODEC = 27,
	FMOD_SOUND_TYPE_FADPCM = 28,
	FMOD_SOUND_TYPE_MAX = 29,
	FMOD_SOUND_TYPE_FORCEINT = 65536
}

enum _Anonymous_10
{
	FMOD_SOUND_FORMAT_NONE = 0,
	FMOD_SOUND_FORMAT_PCM8 = 1,
	FMOD_SOUND_FORMAT_PCM16 = 2,
	FMOD_SOUND_FORMAT_PCM24 = 3,
	FMOD_SOUND_FORMAT_PCM32 = 4,
	FMOD_SOUND_FORMAT_PCMFLOAT = 5,
	FMOD_SOUND_FORMAT_GCADPCM = 6,
	FMOD_SOUND_FORMAT_IMAADPCM = 7,
	FMOD_SOUND_FORMAT_VAG = 8,
	FMOD_SOUND_FORMAT_HEVAG = 9,
	FMOD_SOUND_FORMAT_XMA = 10,
	FMOD_SOUND_FORMAT_MPEG = 11,
	FMOD_SOUND_FORMAT_CELT = 12,
	FMOD_SOUND_FORMAT_AT9 = 13,
	FMOD_SOUND_FORMAT_XWMA = 14,
	FMOD_SOUND_FORMAT_VORBIS = 15,
	FMOD_SOUND_FORMAT_FADPCM = 16,
	FMOD_SOUND_FORMAT_MAX = 17,
	FMOD_SOUND_FORMAT_FORCEINT = 65536
}

enum _Anonymous_11
{
	FMOD_OPENSTATE_READY = 0,
	FMOD_OPENSTATE_LOADING = 1,
	FMOD_OPENSTATE_ERROR = 2,
	FMOD_OPENSTATE_CONNECTING = 3,
	FMOD_OPENSTATE_BUFFERING = 4,
	FMOD_OPENSTATE_SEEKING = 5,
	FMOD_OPENSTATE_PLAYING = 6,
	FMOD_OPENSTATE_SETPOSITION = 7,
	FMOD_OPENSTATE_MAX = 8,
	FMOD_OPENSTATE_FORCEINT = 65536
}

enum _Anonymous_12
{
	FMOD_SOUNDGROUP_BEHAVIOR_FAIL = 0,
	FMOD_SOUNDGROUP_BEHAVIOR_MUTE = 1,
	FMOD_SOUNDGROUP_BEHAVIOR_STEALLOWEST = 2,
	FMOD_SOUNDGROUP_BEHAVIOR_MAX = 3,
	FMOD_SOUNDGROUP_BEHAVIOR_FORCEINT = 65536
}

enum _Anonymous_13
{
	FMOD_CHANNELCONTROL_CALLBACK_END = 0,
	FMOD_CHANNELCONTROL_CALLBACK_VIRTUALVOICE = 1,
	FMOD_CHANNELCONTROL_CALLBACK_SYNCPOINT = 2,
	FMOD_CHANNELCONTROL_CALLBACK_OCCLUSION = 3,
	FMOD_CHANNELCONTROL_CALLBACK_MAX = 4,
	FMOD_CHANNELCONTROL_CALLBACK_FORCEINT = 65536
}

enum _Anonymous_14
{
	FMOD_CHANNELCONTROL_DSP_HEAD = -1,
	FMOD_CHANNELCONTROL_DSP_FADER = -2,
	FMOD_CHANNELCONTROL_DSP_PANNER = -3,
	FMOD_CHANNELCONTROL_DSP_TAIL = -4,
	FMOD_CHANNELCONTROL_DSP_FORCEINT = 65536
}

enum _Anonymous_15
{
	FMOD_ERRORCALLBACK_INSTANCETYPE_NONE = 0,
	FMOD_ERRORCALLBACK_INSTANCETYPE_SYSTEM = 1,
	FMOD_ERRORCALLBACK_INSTANCETYPE_CHANNEL = 2,
	FMOD_ERRORCALLBACK_INSTANCETYPE_CHANNELGROUP = 3,
	FMOD_ERRORCALLBACK_INSTANCETYPE_CHANNELCONTROL = 4,
	FMOD_ERRORCALLBACK_INSTANCETYPE_SOUND = 5,
	FMOD_ERRORCALLBACK_INSTANCETYPE_SOUNDGROUP = 6,
	FMOD_ERRORCALLBACK_INSTANCETYPE_DSP = 7,
	FMOD_ERRORCALLBACK_INSTANCETYPE_DSPCONNECTION = 8,
	FMOD_ERRORCALLBACK_INSTANCETYPE_GEOMETRY = 9,
	FMOD_ERRORCALLBACK_INSTANCETYPE_REVERB3D = 10,
	FMOD_ERRORCALLBACK_INSTANCETYPE_STUDIO_SYSTEM = 11,
	FMOD_ERRORCALLBACK_INSTANCETYPE_STUDIO_EVENTDESCRIPTION = 12,
	FMOD_ERRORCALLBACK_INSTANCETYPE_STUDIO_EVENTINSTANCE = 13,
	FMOD_ERRORCALLBACK_INSTANCETYPE_STUDIO_PARAMETERINSTANCE = 14,
	FMOD_ERRORCALLBACK_INSTANCETYPE_STUDIO_CUEINSTANCE = 15,
	FMOD_ERRORCALLBACK_INSTANCETYPE_STUDIO_BUS = 16,
	FMOD_ERRORCALLBACK_INSTANCETYPE_STUDIO_VCA = 17,
	FMOD_ERRORCALLBACK_INSTANCETYPE_STUDIO_BANK = 18,
	FMOD_ERRORCALLBACK_INSTANCETYPE_STUDIO_COMMANDREPLAY = 19,
	FMOD_ERRORCALLBACK_INSTANCETYPE_FORCEINT = 65536
}

enum _Anonymous_17
{
	FMOD_DSP_RESAMPLER_DEFAULT = 0,
	FMOD_DSP_RESAMPLER_NOINTERP = 1,
	FMOD_DSP_RESAMPLER_LINEAR = 2,
	FMOD_DSP_RESAMPLER_CUBIC = 3,
	FMOD_DSP_RESAMPLER_SPLINE = 4,
	FMOD_DSP_RESAMPLER_MAX = 5,
	FMOD_DSP_RESAMPLER_FORCEINT = 65536
}

enum _Anonymous_18
{
	FMOD_DSPCONNECTION_TYPE_STANDARD = 0,
	FMOD_DSPCONNECTION_TYPE_SIDECHAIN = 1,
	FMOD_DSPCONNECTION_TYPE_SEND = 2,
	FMOD_DSPCONNECTION_TYPE_SEND_SIDECHAIN = 3,
	FMOD_DSPCONNECTION_TYPE_MAX = 4,
	FMOD_DSPCONNECTION_TYPE_FORCEINT = 65536
}

enum _Anonymous_19
{
	FMOD_TAGTYPE_UNKNOWN = 0,
	FMOD_TAGTYPE_ID3V1 = 1,
	FMOD_TAGTYPE_ID3V2 = 2,
	FMOD_TAGTYPE_VORBISCOMMENT = 3,
	FMOD_TAGTYPE_SHOUTCAST = 4,
	FMOD_TAGTYPE_ICECAST = 5,
	FMOD_TAGTYPE_ASF = 6,
	FMOD_TAGTYPE_MIDI = 7,
	FMOD_TAGTYPE_PLAYLIST = 8,
	FMOD_TAGTYPE_FMOD = 9,
	FMOD_TAGTYPE_USER = 10,
	FMOD_TAGTYPE_MAX = 11,
	FMOD_TAGTYPE_FORCEINT = 65536
}

enum _Anonymous_20
{
	FMOD_TAGDATATYPE_BINARY = 0,
	FMOD_TAGDATATYPE_INT = 1,
	FMOD_TAGDATATYPE_FLOAT = 2,
	FMOD_TAGDATATYPE_STRING = 3,
	FMOD_TAGDATATYPE_STRING_UTF16 = 4,
	FMOD_TAGDATATYPE_STRING_UTF16BE = 5,
	FMOD_TAGDATATYPE_STRING_UTF8 = 6,
	FMOD_TAGDATATYPE_CDTOC = 7,
	FMOD_TAGDATATYPE_MAX = 8,
	FMOD_TAGDATATYPE_FORCEINT = 65536
}

struct _Anonymous_2
{
	float x;
	float y;
	float z;
}

struct FMOD_3D_ATTRIBUTES
{
	FMOD_VECTOR position;
	FMOD_VECTOR velocity;
	FMOD_VECTOR forward;
	FMOD_VECTOR up;
}

struct _Anonymous_3
{
	uint Data1;
	ushort Data2;
	ushort Data3;
	ubyte[8] Data4;
}

struct FMOD_ASYNCREADINFO
{
	void* handle;
	uint offset;
	uint sizebytes;
	int priority;
	void* userdata;
	void* buffer;
	uint bytesread;
	FMOD_FILE_ASYNCDONE done;
}

struct _Anonymous_16
{
	FMOD_RESULT result;
	FMOD_ERRORCALLBACK_INSTANCETYPE instancetype;
	void* instance;
	const(char)* functionname;
	const(char)* functionparams;
}

struct FMOD_TAG
{
	FMOD_TAGTYPE type;
	FMOD_TAGDATATYPE datatype;
	char* name;
	void* data;
	uint datalen;
	FMOD_BOOL updated;
}

struct FMOD_CREATESOUNDEXINFO
{
	int cbsize;
	uint length;
	uint fileoffset;
	int numchannels;
	int defaultfrequency;
	FMOD_SOUND_FORMAT format;
	uint decodebuffersize;
	int initialsubsound;
	int numsubsounds;
	int* inclusionlist;
	int inclusionlistnum;
	FMOD_SOUND_PCMREAD_CALLBACK pcmreadcallback;
	FMOD_SOUND_PCMSETPOS_CALLBACK pcmsetposcallback;
	FMOD_SOUND_NONBLOCK_CALLBACK nonblockcallback;
	const(char)* dlsname;
	const(char)* encryptionkey;
	int maxpolyphony;
	void* userdata;
	FMOD_SOUND_TYPE suggestedsoundtype;
	FMOD_FILE_OPEN_CALLBACK fileuseropen;
	FMOD_FILE_CLOSE_CALLBACK fileuserclose;
	FMOD_FILE_READ_CALLBACK fileuserread;
	FMOD_FILE_SEEK_CALLBACK fileuserseek;
	FMOD_FILE_ASYNCREAD_CALLBACK fileuserasyncread;
	FMOD_FILE_ASYNCCANCEL_CALLBACK fileuserasynccancel;
	void* fileuserdata;
	FMOD_CHANNELORDER channelorder;
	FMOD_CHANNELMASK channelmask;
	FMOD_SOUNDGROUP* initialsoundgroup;
	uint initialseekposition;
	FMOD_TIMEUNIT initialseekpostype;
	int ignoresetfilesystem;
	uint audioqueuepolicy;
	uint minmidigranularity;
	int nonblockthreadid;
}

struct FMOD_REVERB_PROPERTIES
{
	float DecayTime;
	float EarlyDelay;
	float LateDelay;
	float HFReference;
	float HFDecayRatio;
	float Diffusion;
	float Density;
	float LowShelfFrequency;
	float LowShelfGain;
	float HighCut;
	float EarlyLateMix;
	float WetLevel;
}

struct FMOD_ADVANCEDSETTINGS
{
	int cbSize;
	int maxMPEGCodecs;
	int maxADPCMCodecs;
	int maxXMACodecs;
	int maxVorbisCodecs;
	int maxAT9Codecs;
	int maxFADPCMCodecs;
	int maxPCMCodecs;
	int ASIONumChannels;
	char** ASIOChannelList;
	FMOD_SPEAKER* ASIOSpeakerList;
	float HRTFMinAngle;
	float HRTFMaxAngle;
	float HRTFFreq;
	float vol0virtualvol;
	uint defaultDecodeBufferSize;
	ushort profilePort;
	uint geometryMaxFadeTime;
	float distanceFilterCenterFreq;
	int reverb3Dinstance;
	int DSPBufferPoolSize;
	uint stackSizeStream;
	uint stackSizeNonBlocking;
	uint stackSizeMixer;
	FMOD_DSP_RESAMPLER resamplerMethod;
	uint commandQueueSize;
	uint randomSeed;
}

struct FMOD_SOUND;


struct FMOD_CHANNEL;


struct FMOD_DSPCONNECTION;


struct FMOD_CHANNELCONTROL;


struct FMOD_GEOMETRY;


struct FMOD_SYSTEM;


struct FMOD_REVERB3D;


struct FMOD_DSP;


struct FMOD_SYNCPOINT;


struct FMOD_CHANNELGROUP;


struct FMOD_SOUNDGROUP;


struct FMOD_POLYGON;
